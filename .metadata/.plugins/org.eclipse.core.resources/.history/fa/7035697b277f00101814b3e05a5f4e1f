package edu.pnu.config;

import java.io.IOException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.security.core.Authentication;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.oauth2.client.authentication.OAuth2AuthenticationToken;
import org.springframework.security.oauth2.core.user.OAuth2User;
import org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler;
import org.springframework.stereotype.Component;

import edu.pnu.domain.Member;
import edu.pnu.persistence.MemberRepository;
import edu.pnu.util.JWTUtil;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;

@Component("OAuth2SuccessHandlerWithDB")
public class OAuth2SuccessHandlerWithDB { //JWT 토큰을 응답 헤더에 추가하는 핸들러
	 @Autowired private MemberRepository memRepo;
	 @Autowired private PasswordEncoder encoder;
	 @Override
	public void onAuthenticationSuccess(HttpServletRequest request, 
			HttpServletResponse response, Authentication authentication) throws IOException, ServletException {
		OAuth2AuthenticationToken oAuth2Token = (OAuth2AuthenticationToken)authentication;
		String provider = oAuth2Token.getAuthorizedClientRegistrationId(); // Provider 확인
		System.out.println("로그인 Provider: " + provider);
		
		OAuth2User user = (OAuth2User)oAuth2Token.getPrincipal();
		String email = (String)user.getAttributes().get("email"); // 사용자 정보(email) 확인
		System.out.println("사용자 이메일: " + email); 
		
		String username = provider + "_" + email;
		memRepo.save(Member.builder().username(username).password(encoder.encode("1a2s3d4f")).role("ROLE_MEMBER").enabled(true).build());
		String jwtToken = JWTUtil.getJWT(username);
		response.addHeader(HttpHeaders.AUTHORIZATION, jwtToken);
	 }
}
