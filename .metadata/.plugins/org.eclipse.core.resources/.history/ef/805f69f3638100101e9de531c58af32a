package edu.pnu.config.filter;

import java.io.IOException;
import java.util.Optional;

import org.hibernate.service.spi.ServiceException;
import org.springframework.http.HttpHeaders;
import org.springframework.web.filter.OncePerRequestFilter;

import edu.pnu.domain.Member;
import edu.pnu.persistence.MemberRepository;
import edu.pnu.util.JWTUtil;
import jakarta.servlet.FilterChain;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class JWTAuthorizationFilter extends OncePerRequestFilter {
	private final MemberRepository memberRepository;
	
	@Override
	protected void doFilterInternal(HttpServletRequest request, 
			HttpServletResponse response, FilterChain filterChain) throws IOException, ServiceException{
		
		 // 요청헤더에서JWT를얻어온다.
		String jwtToken = request.getHeader(HttpHeaders.AUTHORIZATION);
		if(jwtToken == null || jwtToken.startsWith(JWTUtil.prefix)) {
			// 없거나"Bearer "로시작하지않는다면
			filterChain.doFilter(request, response);  // 필터를그냥통과
			return;
		}
		// 토큰에서username 추출
		String username = JWTUtil.getClaim(jwtToken, JWTUtil.usernameClaim);
		Optional<Member> opt = memberRepository.findById(username);
		// 토큰에서 얻은 username으로 DB를 검색해서 사용자를 검색
		if(!opt.isPresent()) {
			filterChain.doFilter(request, response);
			return;
		}
		
		
	}
}
